---
interface Link {
  href: string
  name: string
}

const links = [
  { href: '../allRules/index.html', name: 'All rules' },
  { href: '../unusedRules/index.html', name: 'Unused rules' },
  {
    href: '../allPossiblePeerDependencies/index.html',
    name: 'All possible peer dependencies',
  },
] as const satisfies readonly Link[]

interface Props {
  current: (typeof links)[number]['href']
}

const { current } = Astro.props
---

<header class='p-3 border-bottom'>
  <nav>
    <ul class='nav nav-pills'>
      {
        links.map(({ href, name }) => {
          const isCurrent = href === current
          return (
            <li class='nav-item'>
              <a
                {href}
                class:list={['nav-link', { active: isCurrent }]}
                aria-current={isCurrent ? 'page' : undefined}
              >
                {name}
              </a>
            </li>
          )
        })
      }
    </ul>
  </nav>
</header>
